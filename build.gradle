group 'com.vphum.service'
apply from: "./libraries.gradle"
apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.5

repositories {
    maven {
        url "http://repo1.maven.org/maven2"
    }
    mavenCentral()
}

configurations {
    mybatisGenerator
}

dependencies {
    compile(libraries.hikariCP)
    compile(libraries.groovyAll)
    compile(libraries.jstl)
    compile(libraries.springAOP)
    compile(libraries.springContext)
    compile(libraries.springBeans)
    compile(libraries.sringWeb)
    compile(libraries.springWebmvc)
    compile(libraries.springTx)
    compile(libraries.springJdbc)
    compile(libraries.springData)
    compile(libraries.mysql)
    compile(libraries.mybatisGenrator)
    compile(libraries.mybatisSpring)
    compile(libraries.mybatis)
    compile(libraries.junit)
    compile(libraries.commonsDbcp)
    compile(libraries.aspectj)
    compile(libraries.log4j)
    compile(libraries.jmockit)
    compile(libraries.logbackClassic)
    testCompile group: 'junit', name: 'junit', version: '4.12'

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
    mybatisGenerator 'tk.mybatis:mapper:3.4.4'
}

def getDbProperties = {
    def properties = new Properties()
    file("/src/main/resources/mybatis/config.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driver")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.jdbcUrl")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
