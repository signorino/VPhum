<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.vphum.service.service.*" />
    <context:component-scan base-package="com.vphum.service.common.*"/>
    <context:component-scan base-package="com.vphum.service.repository.*"/>
    <context:component-scan base-package="com.vphum.service.repository.mapper.*"/>
    <context:component-scan base-package="com.vphum.service.repository.dao.*"/>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源-->
        <property name="dataSource" ref="dataSourceHikari" />
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="validateMessageSource"/>
    </bean>

    <bean id="validateMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename">
            <value>classpath:validateMessage.properties</value>
         </property>
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>

    <!--传播行为-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS"   read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!--切面-->
    <bean id="aopLog" class="com.vphum.service.common.aop.AOPLog"/>
    <aop:config proxy-target-class="true">
        <aop:aspect ref="aopLog">
            <aop:pointcut id="aopLogCut" expression="execution(* com.vphum.service.*.controller.*..*(..)) || execution(* com.vphum.service.*.service.*..*(..))
            || execution(* com.vphum.service.*.*Helper.*Client.*(..))" />
            <aop:after-throwing method="exception" throwing="exception" pointcut-ref="aopLogCut"/>
            <aop:around method="around" pointcut-ref="aopLogCut"/>
        </aop:aspect>

    </aop:config>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.vphum.service.repository.mapper" />
        <property name="sqlSessionFactoryBeanName" value="myBatisSqlSessionFactory" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />

    </bean>
    <!-- 3.SessionFactory-->
    <bean id="myBatisSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceHikari" />
        <property name="mapperLocations">
            <array>
                <value>classpath*:mappers/*Mapper.xml</value>
            </array>
        </property>
    </bean>

    <import resource="./spring/spring-cache.xml"/>
    <!-- datasource config -->
    <import resource="./spring/spring-datasource.xml"/>

</beans>